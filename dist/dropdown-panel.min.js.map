{"version":3,"file":"dropdown-panel.min.js","sources":["../src/components/dropdown-component.js","../src/components/dropdown-trigger.js","../src/components/dropdown-panel.js","../src/components/dropdown-menu.js","../src/index.js"],"sourcesContent":["/**\n * main dropdown component\n * manages interactions between <dropdown-trigger> and <dropdown-panel>\n * @class DropdownComponent\n * @extends HTMLElement\n */\nexport class DropdownComponent extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    const _ = this;\n\n    // make component focusable for keyboard navigation\n    _.setAttribute('tabindex', '-1');\n\n    // get trigger element - use > to select only direct children\n    _.trigger = _.querySelector(':scope > dropdown-trigger');\n\n    // get content element (either panel or menu) - use > to select only direct children\n    _.panel =\n      _.querySelector(':scope > dropdown-panel') ||\n      _.querySelector(':scope > dropdown-menu');\n\n    // validate existence\n    if (!_.trigger || !_.panel) {\n      console.warn(\n        'dropdown-component requires <dropdown-trigger> and either <dropdown-panel> or <dropdown-menu> as direct children'\n      );\n      return;\n    }\n\n    // if it's a dropdown-panel, set position relative on the dropdown component\n    if (_.panel.tagName.toLowerCase() === 'dropdown-panel') {\n      _.style.position = 'relative';\n    } else {\n      _.style.position = 'static';\n    }\n\n    // assign unique id to panel if needed\n    const panelId = _.panel.id || `dropdown-panel-${Date.now()}`;\n    _.panel.id = panelId;\n\n    // assign unique id to trigger if needed (for aria-labelledby)\n    if (!_.trigger.id) {\n      _.trigger.id = `dropdown-trigger-${Date.now()}`;\n    }\n\n    // initialize aria attributes\n    _.trigger.setAttribute('aria-controls', panelId);\n    _.trigger.setAttribute('aria-expanded', 'false');\n    _.panel.setAttribute('aria-hidden', 'true');\n    _.panel.setAttribute('role', 'menu');\n    _.panel.setAttribute('aria-labelledby', _.trigger.id);\n\n    // initial state\n    _.hide();\n\n    // mouse enter and leave events on main dropdown-component element\n    _.addEventListener('mouseenter', () => _.show());\n    _.addEventListener('mouseleave', () => _.hide());\n\n    // show or hide with enter\n    _.trigger.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault();\n        _.toggle();\n      }\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        _.hide();\n        _.trigger.focus();\n      }\n    });\n\n    // hide panel when escape\n    _.panel.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        _.hide();\n        _.trigger.focus();\n      }\n    });\n  }\n\n  toggle() {\n    const _ = this;\n    if (_.panel.getAttribute('aria-hidden') === 'true') {\n      _.show();\n    } else {\n      _.hide();\n    }\n  }\n\n  show() {\n    const _ = this;\n    _.panel.setAttribute('aria-hidden', 'false');\n    _.panel.removeAttribute('inert');\n    _.trigger.setAttribute('aria-expanded', 'true');\n  }\n\n  hide() {\n    const _ = this;\n    _.panel.setAttribute('aria-hidden', 'true');\n    _.panel.setAttribute('inert', '');\n    _.trigger.setAttribute('aria-expanded', 'false');\n  }\n}\n\n// define the element\nif (!customElements.get('dropdown-component')) {\n  customElements.define('dropdown-component', DropdownComponent);\n}\n","/**\n * Dropdown trigger component\n * Manages user interactions for opening and closing the dropdown\n * @class DropdownTrigger\n * @extends HTMLElement\n */\nexport class DropdownTrigger extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  /**\n   * when element is connected to the dom\n   */\n  connectedCallback() {\n    const _ = this;\n    \n    // ensure trigger has an ID for ARIA relationships\n    if (!_.id) {\n      _.id = `dropdown-trigger-${Date.now()}`;\n    }\n\n    // ensure trigger is focusable\n    if (!_.hasAttribute('tabindex')) {\n      _.setAttribute('tabindex', '0');\n    }\n\n    // set role for accessibility\n    if (!_.hasAttribute('role')) {\n      _.setAttribute('role', 'button');\n    }\n\n    // prevent text selection on trigger\n    _.style.userSelect = 'none';\n  }\n}","/**\n * Dropdown panel component\n * Container for dropdown content\n * @class DropdownPanel\n * @extends HTMLElement\n */\nexport class DropdownPanel extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  /**\n   * when element is connected to the dom\n   */\n  connectedCallback() {\n    const _ = this;\n    \n    // ensure aria-hidden is set initially\n    if (!_.hasAttribute('aria-hidden')) {\n      _.setAttribute('aria-hidden', 'true');\n    }\n    \n    // ensure role is menu by default\n    if (!_.hasAttribute('role')) {\n      _.setAttribute('role', 'menu');\n    }\n  }\n}","/**\n * dropdown menu component\n * container for mega menu style dropdown content\n * @class DropdownMenu\n * @extends HTMLElement\n */\nexport class DropdownMenu extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  /**\n   * when element is connected to the dom\n   */\n  connectedCallback() {\n    const _ = this;\n\n    // ensure aria-hidden is set initially\n    if (!_.hasAttribute('aria-hidden')) {\n      _.setAttribute('aria-hidden', 'true');\n    }\n\n    // ensure role is menubar for mega menu\n    if (!_.hasAttribute('role')) {\n      _.setAttribute('role', 'menubar');\n    }\n  }\n}\n\n// define the element\nif (!customElements.get('dropdown-menu')) {\n  customElements.define('dropdown-menu', DropdownMenu);\n}\n","/**\n * @file Main entry point for dropdown-panel web component\n * @author Cory Schulz\n * @version 0.1.0\n */\n\n// import styles\nimport './dropdown-component.scss';\n\n// import components\nimport { DropdownComponent } from './components/dropdown-component.js';\nimport { DropdownTrigger } from './components/dropdown-trigger.js';\nimport { DropdownPanel } from './components/dropdown-panel.js';\nimport { DropdownMenu } from './components/dropdown-menu.js';\n\n// export components for external use\nexport { DropdownComponent, DropdownTrigger, DropdownPanel };\n\n// define custom elements if not already defined\nif (!customElements.get('dropdown-component')) {\n  customElements.define('dropdown-component', DropdownComponent);\n}\n\nif (!customElements.get('dropdown-trigger')) {\n  customElements.define('dropdown-trigger', DropdownTrigger);\n}\n\nif (!customElements.get('dropdown-panel')) {\n  customElements.define('dropdown-panel', DropdownPanel);\n}\n\nif (!customElements.get('dropdown-menu')) {\n  customElements.define('dropdown-menu', DropdownMenu);\n}\n"],"names":["DropdownComponent","HTMLElement","constructor","super","connectedCallback","_","this","setAttribute","trigger","querySelector","panel","console","warn","tagName","toLowerCase","style","position","panelId","id","Date","now","hide","addEventListener","show","event","key","preventDefault","toggle","focus","getAttribute","removeAttribute","customElements","get","define","DropdownTrigger","hasAttribute","userSelect","DropdownPanel","DropdownMenu"],"mappings":"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"}